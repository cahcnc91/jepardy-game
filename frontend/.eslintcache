[{"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/reportWebVitals.js":"1","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/App.js":"2","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/index.js":"3","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/Header.js":"4","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/Points.js":"5","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/usePoints.js":"6","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/useCategoryState.js":"7","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/QuestionCard.js":"8"},{"size":362,"mtime":1607990792690,"results":"9","hashOfConfig":"10"},{"size":2145,"mtime":1608178814520,"results":"11","hashOfConfig":"10"},{"size":543,"mtime":1607991556818,"results":"12","hashOfConfig":"10"},{"size":2539,"mtime":1607992274792,"results":"13","hashOfConfig":"10"},{"size":1165,"mtime":1608000442477,"results":"14","hashOfConfig":"10"},{"size":595,"mtime":1607992044899,"results":"15","hashOfConfig":"10"},{"size":391,"mtime":1607993739610,"results":"16","hashOfConfig":"10"},{"size":1277,"mtime":1608088975806,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t3w12z",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/reportWebVitals.js",[],"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/App.js",["37"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport Header from \"./components/Header\";\nimport useCategoryState from \"./components/useCategoryState\";\nimport \"./App.css\";\n\nfunction App() {\n  const [categories, setCategories] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(\"http://localhost:5000/all-categories\");\n      if (data.ok) {\n        const list = await data.json();\n        setCategories(list);\n        setLoading(false);\n      } else {\n        setError(\"Something went wrong, please refresh the page.\");\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Header />\n      {loading ? (\n        <Loader active inline=\"centered\" />\n      ) : (\n        <Grid padded style={{ display: \"flex\", width: \"100%\" }}>\n          <CategoryRow data={categories.history} title=\"History\" />\n          <CategoryRow data={categories.computer} title=\"Computer\" />\n          <CategoryRow data={categories.tv} title=\"Tv Shows\" />\n          <CategoryRow data={categories.science} title=\"Science\" />\n          <CategoryRow data={categories.general} title=\"General Knowledge\" />\n        </Grid>\n      )}\n    </Fragment>\n  );\n}\n\nconst CategoryRow = ({ data, title }) => {\n  const [category, setCategory] = useCategoryState();\n  return (\n    <>\n      <div className=\"ft-large-bold patient-summary-results-header\">\n        {title}\n      </div>\n      <Grid.Row className=\"patient-summary-grid\">\n        {data.map((item, i) => (\n          <Grid.Column className=\"patient-summary-grid-column\">\n            <QuestionCard\n              group={category}\n              item={item}\n              answer={item.answer}\n              question={i + 1}\n              setGroup={setCategory}\n              title={item.difficulty}\n            >\n              {item.question}\n            </QuestionCard>\n          </Grid.Column>\n        ))}\n      </Grid.Row>\n    </>\n  );\n};\n\nexport default App;\n","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/index.js",[],["38","39"],"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/Header.js",[],"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/Points.js",[],"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/usePoints.js",["40"],"import React, { useState } from \"react\";\n\nexport default function usePoints(players) {\n  let newPlayers = {};\n  players.forEach((player) => {\n    newPlayers = {\n      ...newPlayers,\n      [player]: 0,\n    };\n  });\n  const [points, setPoints] = useState(newPlayers);\n\n  const addPoint = (person) => {\n    setPoints({\n      ...points,\n      // @ts-ignore\n      [person]: points[person] + 100,\n    });\n  };\n  const subtractPoint = (person) => {\n    setPoints({\n      ...points,\n      // @ts-ignore\n      [person]: points[person] - 100,\n    });\n  };\n\n  return { points, addPoint, subtractPoint };\n}\n","/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/useCategoryState.js",["41"],"/Users/camila_niero_costa_coder/Desktop/cs50-final-project/frontend/src/components/QuestionCard.js",[],{"ruleId":"42","severity":1,"message":"43","line":10,"column":10,"nodeType":"44","messageId":"45","endLine":10,"endColumn":15},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"50","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]